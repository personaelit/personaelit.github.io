<!DOCTYPE html>
<html lang="en">

<head>
    <title>Teh Text Fiels</title>

    <meta charset="UTF-8">
    <meta name="description" content="tEH tEXT fEILS ARE AS Advertised.">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    
    <link rel="stylesheet" href="../personaelit.css">
    <script src="../personaelit.js"></script>
</head>

<body>
    <header>
        <h1 id="title">Teh Text Fiels</h1>
        <div id="subtitle">plaintext is the best text.</div>
    </header>
    <nav>
        <a href="../">../</a>
    </nav>
    <main id="content">
        <p>Dumping my thoughts into plaintext files.</p>
        [[LINKS]]
        <h2>This page was generated with the following PowerShell script.</h2>
        <pre>
                # Define the path to the HTML template file
                $templatePath = "index.template"

                # Define the output path for the final HTML file
                $outputPath = "index.html"

                # Read the HTML template
                $templateContent = Get-Content -Path $templatePath -Raw

                # Initialize an empty array to hold the links
                $links = @()

                # Loop through each .txt file in the directory
                Get-ChildItem -Filter *.txt | ForEach-Object {
                    $fileName = $_.Name
                    $createdDate = $_.CreationTime
                    $lastModified = $_.LastWriteTime
                    $link = "&lt;li&gt;&lt;a href=""$fileName""&gt;$fileName&lt;/a&gt; | Created: $createdDate, Last Modified: $lastModified&lt;/li&gt;"
                    $links += $link
                }
                
                # Join the links array into a single string with list items
                $linksHtml = "&lt;ul&gt;" + ($links -join "") + "&lt;/ul&gt;"
                

                # Replace the LINKS placeholder with the generated links
                $templateContent = $templateContent -replace "\[\[LINKS\]\]", $linksHtml

                # Write the final HTML content to the output file
                Set-Content -Path $outputPath -Value $templateContent

                Write-Output "HTML file has been generated: $outputPath"

            </pre>

            <h2>Here is the template.</h2>
            <pre>
                &lt;!DOCTYPE html&gt;
                &lt;html lang="en"&gt;

                &lt;head&gt;
                    &lt;title&gt;personaelit.com&lt;/title&gt;
                    &lt;meta name="description"
                        content="tEH tEXT fEILS ARE AS Advertised."&gt;
                    &lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;
                    &lt;link rel="stylesheet" href="../personaelit.css"&gt;
                    &lt;script src="../personaelit.js"&gt;&lt;/script&gt;
                &lt;/head&gt;

                &lt;body&gt;
                    &lt;header&gt;
                        &lt;h1 id="title"&gt;Teh Text Fiels&lt;/h1&gt;
                        &lt;div id="subtitle"&gt;plaintext is the best text.&lt;/div&gt;
                    &lt;/header&gt;
                    &lt;nav&gt;
                        &lt;a href="../"&gt;../&lt;/a&gt;
                    &lt;/nav&gt;
                    &lt;main id="content"&gt;
                        &lt;p&gt;Dumping my thoughts into plaintext files.&lt;/p&gt;
                        &lsqb;&lsqb;LINKS&rsqb;&rsqb;
                        &lt;h2&gt;This page was generated with the following PowerShell script.&lt;/h2&gt;
                        &lt;pre&gt;
                                # Define the path to the HTML template file
                                $templatePath = "index.template"

                                # Define the output path for the final HTML file
                                $outputPath = "index.html"

                                # Read the HTML template
                                $templateContent = Get-Content -Path $templatePath -Raw

                                # Initialize an empty array to hold the links
                                $links = @()

                                # Loop through each .txt file in the directory
                                Get-ChildItem -Filter *.txt | ForEach-Object {
                                    $fileName = $_.Name
                                    $createdDate = $_.CreationTime
                                    $lastModified = $_.LastWriteTime
                                    $link = "&amp;lt;li&amp;gt;&amp;lt;a href=""$fileName""&amp;gt;$fileName&amp;lt;/a&amp;gt; | Created: $createdDate, Last Modified: $lastModified&amp;lt;/li&amp;gt;"
                                    $links += $link
                                }
                                
                                # Join the links array into a single string with list items
                                $linksHtml = "&amp;lt;ul&amp;gt;" + ($links -join "") + "&amp;lt;/ul&amp;gt;"
                                

                                # Replace the LINKS placeholder with the generated links
                                $templateContent = $templateContent -replace "\[\[LINKS\]\]", $linksHtml

                                # Write the final HTML content to the output file
                                Set-Content -Path $outputPath -Value $templateContent

                                Write-Output "HTML file has been generated: $outputPath"

                            &lt;/pre&gt;

                            &lt;h2&gt;Here is the template.&lt;/h2&gt;&gt;
                            &lt;pre&gt;
                                
                            &lt;/pre&gt;
                            &lt;span class="last-updated"&gt;&lt;/span&gt;
                    &lt;/main&gt;

                &lt;/body&gt;

                &lt;/html&gt;

            </pre>
    </main>
    <span class="last-updated"></span>
    <footer>
        <!-- FOOTER -->
    </footer>
</body>

</html>